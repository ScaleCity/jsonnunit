---
version: 2
jobs:
  node-latest: &test
    docker:
      - image: node:latest
    working_directory: ~/jsonnunit
    steps:
      - checkout
      - restore_cache: &restore_cache
          keys:
            - v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
            - v1-npm-{{checksum ".circleci/config.yml"}}
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Testing
          command: yarn test
      - run: ./bin/run --version
      - run: ./bin/run --help
      - run:
          name: Submitting code coverage to codecov
          command: |
            ./node_modules/.bin/nyc report --reporter text-lcov > coverage.lcov
            curl -s https://codecov.io/bash | bash
  node-12:
    <<: *test
    docker:
      - image: node:16
  node-10:
    <<: *test
    docker:
      - image: node:16
  cache:
    <<: *test
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: v1-npm-{{checksum ".circleci/config.yml"}}-{{checksum "yarn.lock"}}
          paths:
            - ~/jsonnunit/node_modules
            - /usr/local/share/.cache/yarn
            - /usr/local/share/.config/yarn
  jsonnet:
    <<: *test
    docker:
      - image: circleci/golang:1.16-node
    steps:
      - checkout
      - run:
          name: Install Jsonnet
          command: go get github.com/google/go-jsonnet/cmd/jsonnet
      - run:
          name: Install dependencies
          command: yarn
      - run: ./bin/run --version
      - run: ./bin/run --help
      - run: 
          name: Execute JSONNUNIT
          command: ./bin/run
workflows:
  version: 2
  "jsonnunit":
    jobs:
      - node-latest
      - node-12
      - node-10
      - jsonnet
      - cache:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
